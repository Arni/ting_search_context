<?php

/**
 * @file
 *
 * Install file the Ting search context.
 */

/**
 * Implements hook_field_schema().
 *
 * Magic callback invoked when a new field is created.
 */
function ting_search_context_field_schema($field) {
	if ($field['type'] == 'ting_search_context') {
		$columns = array(
			'category' => array(
				'type' => 'varchar',
				'length' => 255,
				'not null' => FALSE,
			),
			'weight' => array(
				'type' => 'int',
				'not null' => FALSE,
			),
		);
		$indexes = array(
			'category' => array('category'),
			'weight' => array('weight'),
		);
		return array(
			'columns' => $columns,
			'indexes' => $indexes,
		);
	}
}

/**
 * Implements hook_install().
 */
function ting_search_context_install() {
	if (!field_info_field('field_ting_search_context')) {
		// Rebuild the field cache to make Drupal aware of our custom field.
		field_info_cache_clear();
		$field = array(
			'field_name' => 'field_ting_search_context',
			'label' => t('Search context'),
			'type' => 'ting_search_context',
			'cardinality' => -1,
			'locked' => TRUE,
		);
		field_create_field($field);
	}
	$instance_common = array(
		'field_name' => 'field_ting_search_context',
		'entity_type' => 'node',
		'label' => t('Search context'),
		'description' => t('Associate search contexts with the node.'),
		'display' => array(
			'default' => array(
				'label' => 'hidden',
				'type' => 'hidden',
				'settings' => array(),
			),
		),
	);
	$bundles = unserialize(TING_SEARCH_CONTEXT_NODE_TYPES);
	foreach ($bundles as $bundle) {
		if (!field_info_instance('node', 'field_ting_search_context', $bundle)) {
			$instance = array(
				'bundle' => $bundle,
			);
			field_create_instance($instance + $instance_common);
		}
	}
}